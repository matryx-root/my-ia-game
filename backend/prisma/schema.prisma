generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id            Int           @id @default(autoincrement())
  nombre        String
  email         String        @unique
  password      String
  rol           String        @default("usuario")
  edad          Int?
  celular       String?
  progreso      ProgresoUsuario[]
  logsIngreso   LogIngreso[]
  logsJuego     LogJuego[]
  mensajes      MensajeSoporte[]
  configuracion ConfiguracionUsuario?
  logros        Achievement[]
  errores       LogError[]
}

model Juego {
  id         Int         @id @default(autoincrement())
  nombre     String
  descripcion String?
  logsJuego  LogJuego[]
  progreso   ProgresoUsuario[]
  logros     Achievement[]
  errores    LogError[]
}

model LogIngreso {
  id         Int       @id @default(autoincrement())
  usuario    Usuario   @relation(fields: [usuarioId], references: [id])
  usuarioId  Int
  fechaHora  DateTime  @default(now())
  ip         String?
  userAgent  String?
}

model LogJuego {
  id         Int      @id @default(autoincrement())
  usuario    Usuario  @relation(fields: [usuarioId], references: [id])
  usuarioId  Int
  juego      Juego    @relation(fields: [juegoId], references: [id])
  juegoId    Int
  fechaHora  DateTime @default(now())
  accion     String?  // Ej: "Empezó", "Terminó", "Logró Puntaje"
  detalle    String?  // Ej: "Nivel 3 completado"
  duracion   Int?     // Segundos o milisegundos
}

model LogError {
  id         Int      @id @default(autoincrement())
  usuario    Usuario? @relation(fields: [usuarioId], references: [id])
  usuarioId  Int?
  juego      Juego?   @relation(fields: [juegoId], references: [id])
  juegoId    Int?
  fechaHora  DateTime @default(now())
  mensaje    String
  detalle    String?
}

model MensajeSoporte {
  id         Int      @id @default(autoincrement())
  usuario    Usuario  @relation(fields: [usuarioId], references: [id])
  usuarioId  Int
  mensaje    String
  fechaHora  DateTime @default(now())
  estado     String   @default("pendiente")
  respuesta  String?
}

model ProgresoUsuario {
  id           Int       @id @default(autoincrement())
  usuario      Usuario   @relation(fields: [usuarioId], references: [id])
  usuarioId    Int
  juego        Juego     @relation(fields: [juegoId], references: [id])
  juegoId      Int
  avance       Int?      // Puntaje o porcentaje o nivel
  completado   Boolean?  // true/false
  fechaActualizacion DateTime @default(now())
}

model Achievement {
  id         Int      @id @default(autoincrement())
  usuario    Usuario  @relation(fields: [usuarioId], references: [id])
  usuarioId  Int
  juego      Juego?   @relation(fields: [juegoId], references: [id])
  juegoId    Int?
  nombre     String
  descripcion String?
  fechaHora  DateTime @default(now())
}

model ConfiguracionUsuario {
  id         Int      @id @default(autoincrement())
  usuario    Usuario  @relation(fields: [usuarioId], references: [id])
  usuarioId  Int      @unique
  tema       String?
  idioma     String?
  sonido     Boolean?
  notificaciones Boolean?
}
